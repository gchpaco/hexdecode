from __future__ import annotations
import nbtlib
import struct
from hexast import Direction, Angle, UnknownPattern, Vector, NumberConstant, Entity, Null

demo_out = """
Item.of('hexcasting:spellbook', "{RepairCost:0,page_idx:12,page_names:{1:'{\"text\":\"Recharge\"}',10:'{\"text\":\"Knitting Needle\"}',11:'{\"text\":\"Stygian Loom\"}',2:'{\"text\":\"Create Artifact\"}',3:'{\"text\":\"Place Light\"}',4:'{\"text\":\"Place Bock\"}',5:'{\"text\":\"Mobility\"}',6:'{\"text\":\"Short Blink\"}',7:'{\"text\":\"Delete Mob\"}',8:'{\"text\":\"Obsidian Farm\"}',9:'{\"text\":\"Range(n)\"}'},pages:{1:{list:[{pattern:{angles:[B;5B,4B,5B],start_dir:0b}},{pattern:{angles:[B;4B,4B],start_dir:1b}},{pattern:{angles:[B;5B,4B,5B],start_dir:0b}},{pattern:{angles:[B;0B,4B],start_dir:0b}},{pattern:{angles:[B;0B,1B,4B,5B,4B],start_dir:1b}},{pattern:{angles:[B;5B,5B,5B,5B,5B,0B,4B,1B,4B,1B,4B,1B,4B,1B,4B,1B,4B],start_dir:5b}}]},10:{list:[{pattern:{angles:[B;4B,5B,4B,4B,0B,4B],start_dir:2b}},{pattern:{angles:[B;1B,0B,2B,5B,2B,0B,1B],start_dir:3b}},{pattern:{angles:[B;5B,5B,5B,4B,0B],start_dir:4b}},{pattern:{angles:[B;5B,5B,5B,4B,0B],start_dir:4b}},{pattern:{angles:[B;4B,4B,0B,2B,2B],start_dir:1b}},{pattern:{angles:[B;4B,5B,4B,4B,0B,4B],start_dir:2b}},{pattern:{angles:[B;1B,0B,2B,5B,2B,0B,1B],start_dir:3b}},{pattern:{angles:[B;5B,5B,5B],start_dir:4b}},{pattern:{angles:[B;5B,4B,5B],start_dir:0b}},{pattern:{angles:[B;4B,0B,5B],start_dir:0b}},{pattern:{angles:[B;4B,5B,4B,4B,0B,0B,0B,2B],start_dir:2b}},{pattern:{angles:[B;1B],start_dir:2b}},{pattern:{angles:[B;2B,1B,1B,1B,2B],start_dir:5b}},{pattern:{angles:[B;2B,1B,4B,5B,5B],start_dir:2b}},{pattern:{angles:[B;1B,1B,1B],start_dir:1b}},{pattern:{angles:[B;5B,4B,1B,4B,5B],start_dir:5b}}]},11:{list:[{pattern:{angles:[B;5B,0B,4B,1B,4B,0B,5B,4B,1B,4B,5B,4B],start_dir:5b}},{pattern:{angles:[B;1B,0B,2B,5B,2B,0B,1B],start_dir:3b}},{pattern:{angles:[B;5B,5B,5B],start_dir:4b}},{pattern:{angles:[B;4B,5B,4B,4B,5B],start_dir:2b}},{pattern:{angles:[B;2B,1B,1B,1B,2B],start_dir:5b}},{pattern:{angles:[B;5B,0B,4B,1B,4B,0B,5B],start_dir:5b}},{pattern:{angles:[B;2B,1B,4B,5B,5B],start_dir:2b}},{pattern:{angles:[B;4B,5B,2B,1B,1B],start_dir:3b}},{pattern:{angles:[B;1B,1B,1B],start_dir:1b}},{pattern:{angles:[B;4B,4B,0B,2B,2B],start_dir:1b}},{pattern:{angles:[B;1B,2B,5B,2B,1B],start_dir:3b}}]},12:{list:[{pattern:{angles:[B;4B,5B,4B,4B,5B],start_dir:2b}},{pattern:{angles:[B;2B,1B,1B,1B,2B],start_dir:5b}},{pattern:{angles:[B;5B,0B,4B,1B,4B,0B,5B],start_dir:5b}},{pattern:{angles:[B;2B,1B,4B,5B,5B],start_dir:2b}},{pattern:{angles:[B;4B,5B,2B,1B,1B],start_dir:3b}},{list:[{list:[{vec3:[L;4640097398889119744L,4615063718147915776L,4645999577307021312L]},{vec3:[L;4640097398889119744L,4616752568008179712L,4645999577307021312L]},{vec3:[L;4640097398889119744L,4617878467915022336L,4645999577307021312L]},{vec3:[L;4640062214517030912L,4617878467915022336L,4645999577307021312L]},{vec3:[L;4640062214517030912L,4616752568008179712L,4645999577307021312L]},{vec3:[L;4640062214517030912L,4615063718147915776L,4645999577307021312L]},{vec3:[L;4640027030144942080L,4615063718147915776L,4646017169493065728L]},{vec3:[L;4640027030144942080L,4616752568008179712L,4646017169493065728L]},{vec3:[L;4640027030144942080L,4617878467915022336L,4646017169493065728L]},{vec3:[L;4640027030144942080L,4617878467915022336L,4646034761679110144L]},{vec3:[L;4640027030144942080L,4616752568008179712L,4646034761679110144L]},{vec3:[L;4640027030144942080L,4615063718147915776L,4646034761679110144L]},{vec3:[L;4640027030144942080L,4615063718147915776L,4646052353865154560L]},{vec3:[L;4640027030144942080L,4616752568008179712L,4646052353865154560L]},{vec3:[L;4640027030144942080L,4617878467915022336L,4646052353865154560L]},{vec3:[L;4640062214517030912L,4615063718147915776L,4646069946051198976L]},{vec3:[L;4640097398889119744L,4615063718147915776L,4646069946051198976L]},{vec3:[L;4640132583261208576L,4615063718147915776L,4646069946051198976L]},{vec3:[L;4640132583261208576L,4616752568008179712L,4646069946051198976L]},{vec3:[L;4640097398889119744L,4616752568008179712L,4646069946051198976L]},{vec3:[L;4640062214517030912L,4616752568008179712L,4646069946051198976L]},{vec3:[L;4640062214517030912L,4617878467915022336L,4646069946051198976L]},{vec3:[L;4640097398889119744L,4617878467915022336L,4646069946051198976L]},{vec3:[L;4640132583261208576L,4617878467915022336L,4646069946051198976L]},{vec3:[L;4640167767633297408L,4617878467915022336L,4646052353865154560L]},{vec3:[L;4640167767633297408L,4616752568008179712L,4646052353865154560L]},{vec3:[L;4640167767633297408L,4615063718147915776L,4646052353865154560L]},{vec3:[L;4640167767633297408L,4615063718147915776L,4646034761679110144L]},{vec3:[L;4640167767633297408L,4615063718147915776L,4646017169493065728L]},{vec3:[L;4640167767633297408L,4616752568008179712L,4646017169493065728L]},{vec3:[L;4640167767633297408L,4616752568008179712L,4646034761679110144L]},{vec3:[L;4640167767633297408L,4617878467915022336L,4646034761679110144L]},{vec3:[L;4640167767633297408L,4617878467915022336L,4646017169493065728L]},{vec3:[L;4640132583261208576L,4615063718147915776L,4645999577307021312L]},{vec3:[L;4640132583261208576L,4616752568008179712L,4645999577307021312L]},{vec3:[L;4640132583261208576L,4617878467915022336L,4645999577307021312L]}]},{vec3:[L;4640097398889119744L,4616752568008179712L,4646034761679110144L]},{list:[{pattern:{angles:[B;4B,5B,4B,4B,5B],start_dir:2b}},{pattern:{angles:[B;4B,4B,0B,4B,4B,0B,4B,4B],start_dir:1b}},{pattern:{angles:[B;5B,5B,5B],start_dir:4b}},{pattern:{angles:[B;1B,1B,1B,1B,1B,2B,1B],start_dir:3b}},{pattern:{angles:[B;1B,1B,1B],start_dir:1b}},{pattern:{angles:[B;4B,4B,0B,2B,2B],start_dir:1b}},{pattern:{angles:[B;2B,4B,2B,4B,2B],start_dir:0b}}]}]}]},2:{list:[{pattern:{angles:[B;5B,4B,5B],start_dir:0b}},{pattern:{angles:[B;4B,4B],start_dir:1b}},{pattern:{angles:[B;5B,4B,5B],start_dir:0b}},{pattern:{angles:[B;0B,4B],start_dir:0b}},{pattern:{angles:[B;0B,1B,4B,5B,4B],start_dir:1b}},{pattern:{angles:[B;4B,4B,0B,2B,2B],start_dir:1b}},{pattern:{angles:[B;0B,0B,4B,5B,5B,5B,5B,5B,1B,4B,0B,5B,0B,5B,0B,5B,0B,5B,0B,5B,0B,0B,5B,5B,1B,4B,2B,4B,1B,5B,5B,1B,5B,5B,1B,4B,2B,4B,1B,5B,5B],start_dir:1b}}]},3:{list:[{pattern:{angles:[B;5B,4B,5B],start_dir:0b}},{pattern:{angles:[B;4B,4B],start_dir:1b}},{pattern:{angles:[B;5B,4B,5B],start_dir:0b}},{pattern:{angles:[B;0B,4B],start_dir:0b}},{pattern:{angles:[B;0B,5B,4B,4B,0B,2B,2B],start_dir:1b}},{pattern:{angles:[B;5B,4B,5B],start_dir:0b}},{pattern:{angles:[B;4B,4B],start_dir:1b}},{pattern:{angles:[B;5B,4B,5B],start_dir:0b}},{pattern:{angles:[B;0B,4B],start_dir:0b}},{pattern:{angles:[B;0B,1B,2B,2B,0B,4B,4B],start_dir:1b}},{pattern:{angles:[B;0B,4B,4B,0B],start_dir:0b}},{pattern:{angles:[B;5B,5B,2B],start_dir:0b}}]},4:{list:[{pattern:{angles:[B;5B,4B,5B],start_dir:0b}},{pattern:{angles:[B;4B,4B],start_dir:1b}},{pattern:{angles:[B;5B,4B,5B],start_dir:0b}},{pattern:{angles:[B;0B,4B],start_dir:0b}},{pattern:{angles:[B;0B,5B,4B,4B,0B,2B,2B],start_dir:1b}},{pattern:{angles:[B;5B,4B,5B],start_dir:0b}},{pattern:{angles:[B;4B,4B],start_dir:1b}},{pattern:{angles:[B;5B,4B,5B],start_dir:0b}},{pattern:{angles:[B;0B,4B],start_dir:0b}},{pattern:{angles:[B;0B,1B,2B,2B,0B,4B,4B],start_dir:1b}},{pattern:{angles:[B;0B,4B,4B,0B],start_dir:0b}},{pattern:{angles:[B;5B,5B,4B],start_dir:0b}}]},5:{list:[{pattern:{angles:[B;5B,5B,5B],start_dir:4b}},{pattern:{angles:[B;5B,4B,5B],start_dir:0b}},{pattern:{angles:[B;4B,5B,4B,4B,0B,0B],start_dir:2b}},{pattern:{angles:[B;5B,5B,5B,5B,5B,4B,0B,0B,4B,0B,4B,0B,2B],start_dir:4b}},{pattern:{angles:[B;1B,1B,1B],start_dir:1b}},{pattern:{angles:[B;5B,5B,5B],start_dir:4b}},{pattern:{angles:[B;5B,4B,5B],start_dir:0b}},{pattern:{angles:[B;5B,4B,5B],start_dir:0b}},{pattern:{angles:[B;0B,4B],start_dir:0b}},{pattern:{angles:[B;4B,5B,4B,4B,0B,0B,0B],start_dir:2b}},{pattern:{angles:[B;4B,4B,2B,4B,4B,2B,4B,4B],start_dir:1b}},{pattern:{angles:[B;4B,5B,4B,4B,0B,0B,0B],start_dir:2b}},{pattern:{angles:[B;1B,0B,2B,5B,2B,0B,1B],start_dir:3b}},{pattern:{angles:[B;5B,5B,5B],start_dir:4b}},{pattern:{angles:[B;4B,0B,5B,5B,5B,0B,4B,5B,0B],start_dir:3b}},{pattern:{angles:[B;1B,1B,1B],start_dir:1b}},{pattern:{angles:[B;4B,4B,0B,2B,2B],start_dir:1b}},{pattern:{angles:[B;2B,4B,2B,4B,2B],start_dir:0b}},{pattern:{angles:[B;1B,1B,1B],start_dir:1b}},{pattern:{angles:[B;4B,5B,4B,4B,0B,0B],start_dir:2b}},{pattern:{angles:[B;1B,0B,2B,5B,2B,0B,1B],start_dir:3b}},{pattern:{angles:[B;5B,4B,5B],start_dir:0b}},{pattern:{angles:[B;4B,0B,5B],start_dir:0b}},{pattern:{angles:[B;4B,5B,4B,4B,0B,0B,0B,2B],start_dir:2b}},{pattern:{angles:[B;4B,4B,0B,2B,2B],start_dir:1b}},{pattern:{angles:[B;5B],start_dir:0b}},{pattern:{angles:[B;2B,1B,1B,1B,2B],start_dir:5b}},{pattern:{angles:[B;2B,1B,4B,5B,5B],start_dir:2b}}]},6:{list:[{pattern:{angles:[B;5B,4B,5B],start_dir:0b}},{pattern:{angles:[B;4B,5B,4B,4B,0B,0B,0B],start_dir:2b}},{pattern:{angles:[B;4B,0B,5B,5B,5B,0B,4B,5B],start_dir:3b}}]},7:{list:[{pattern:{angles:[B;5B,4B,5B],start_dir:0b}},{pattern:{angles:[B;4B,4B],start_dir:1b}},{pattern:{angles:[B;5B,4B,5B],start_dir:0b}},{pattern:{angles:[B;0B,4B],start_dir:0b}},{pattern:{angles:[B;0B,1B,4B,5B,4B],start_dir:1b}},{pattern:{angles:[B;4B,4B],start_dir:1b}},{pattern:{angles:[B;4B,5B,4B,4B,0B,0B,0B,4B],start_dir:2b}},{pattern:{angles:[B;4B,4B,2B,4B,4B,2B,4B,4B],start_dir:1b}},{pattern:{angles:[B;5B,4B,5B,5B,5B,5B,5B],start_dir:1b}},{pattern:{angles:[B;4B,5B,4B,0B,5B,4B,2B,4B,5B],start_dir:2b}},{pattern:{angles:[B;4B,5B,4B,4B,5B],start_dir:2b}},{pattern:{angles:[B;4B,4B,0B,4B,4B,0B,4B,4B],start_dir:1b}},{pattern:{angles:[B;5B,5B,4B],start_dir:0b}},{pattern:{angles:[B;5B,4B,5B,5B,5B,5B,5B],start_dir:1b}}]},8:{list:[{pattern:{angles:[B;5B,4B,5B],start_dir:0b}},{pattern:{angles:[B;4B,4B],start_dir:1b}},{pattern:{angles:[B;5B,4B,5B],start_dir:0b}},{pattern:{angles:[B;0B,4B],start_dir:0b}},{pattern:{angles:[B;0B,5B,4B,4B,0B,2B,2B],start_dir:1b}},{pattern:{angles:[B;4B,4B,2B,4B,4B],start_dir:1b}},{pattern:{angles:[B;5B,4B,5B,5B,5B,5B,5B],start_dir:1b}},{pattern:{angles:[B;5B,5B,4B,5B,0B,4B,0B,5B,4B,5B,5B],start_dir:4b}}]},9:{list:[{pattern:{angles:[B;4B,5B,4B,4B],start_dir:2b}},{pattern:{angles:[B;4B,4B,0B,2B,2B],start_dir:1b}},{pattern:{angles:[B;4B,4B,2B,4B,4B,2B,4B,4B],start_dir:1b}},{pattern:{angles:[B;5B,0B,4B,1B,4B,0B,5B,4B,1B,4B,5B,4B],start_dir:5b}},{pattern:{angles:[B;1B,0B,2B,5B,2B,0B,1B],start_dir:3b}},{pattern:{angles:[B;4B,5B,4B,4B],start_dir:2b}},{pattern:{angles:[B;1B,5B,5B,0B,4B,0B,5B,4B,4B,0B],start_dir:5b}},{pattern:{angles:[B;5B,5B,5B],start_dir:4b}},{pattern:{angles:[B;4B],start_dir:2b}},{pattern:{angles:[B;5B,1B,1B,0B,2B,0B,1B,2B,2B,0B],start_dir:0b}},{pattern:{angles:[B;4B,4B,2B,4B,4B],start_dir:0b}},{pattern:{angles:[B;4B,5B,4B,4B,0B],start_dir:2b}},{pattern:{angles:[B;0B,4B,4B,0B],start_dir:0b}},{pattern:{angles:[B;1B,5B,5B,0B,4B,0B,5B,4B,4B,0B],start_dir:5b}},{pattern:{angles:[B;1B,1B,1B],start_dir:1b}},{pattern:{angles:[B;4B,4B,0B,2B,2B],start_dir:1b}},{pattern:{angles:[B;2B,4B,2B,4B,2B],start_dir:0b}}]}}}")
"""

def _repack_vec3s(vector):
    args = [NumberConstant(struct.unpack("d", struct.pack("q", element.unpack()))[0])
            for element in vector]
    return Vector(*args)
def _parse_stanza(stanza):
    match stanza:
        case {'pattern': pattern}:
            start_dir = Direction(pattern['start_dir'].unpack())
            angles = ''.join([Angle.from_number(angle.unpack()).letter for angle in pattern['angles']])
            return UnknownPattern(start_dir, angles)
        case {'list': list}:
            return [_parse_stanza(element) for element in list]
        case {'entity': entity}:
            return Entity(entity['uuid'])
        case {'widget': "NULL"}:
            return Null()
        case {'vec3': array}:
            return _repack_vec3s(array)
        case {'double': double}:
            return NumberConstant(double.unpack())
        case _:
            raise RuntimeError(f"Not sure what to do with {stanza}")
def _parse_spellbook(nbt):
    for page, contents in nbt['pages'].items():
        name = nbt['page_names'].get(page, "(unnamed)")
        spell = _parse_stanza(contents)
        yield name, spell

def parse(text):
    text = text.strip()
    if text.startswith("Item.of"): # kubejs output
        type_start = text.find("'")
        assert type_start != -1
        type_end = text.find("'", type_start+1)
        assert type_end != -1
        type = text[type_start+1:type_end]
        object_start = text.find('"')
        object_end = text.rfind('"')
        object = text[object_start+1:object_end]
        object = object.replace('\\"', '"')
        nbt = nbtlib.parse_nbt(object)
    else:
        whole = nbtlib.parse_nbt(text)
        type = whole['id']
        nbt = whole['tag']

    match type:
        case "hexcasting:spellbook":
            yield from _parse_spellbook(nbt)
        case other:
            raise RuntimeError(f"Dunno how to handle objects like {other}")
